<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[C的预处理]]></title>
    <url>%2F2018%2F04%2F24%2FC%E7%9A%84%E9%A2%84%E5%A4%84%E7%90%86%2F</url>
    <content type="text"><![CDATA[深入学习C的预处理。C/C++语言的程序第一行一般都是 #include “ “ 或者#include &lt; &gt;,以前只知道它是预处理，其中细节没有研究过。 现在从头再看一遍C，跟当初第一次学习C语言的感觉是完全不一样的（此处感慨省略一千字）。现在有能力深入研究一下C的预处理了，以此篇博客整理一下。 预处理首先在C/C++语言编译的时候，会经历以下几个步骤：预处理，编译，汇编，链接，然后生成可执行文件。整个过程是一连串动作完成的。而预处理阶段呢，也是最先执行的一个步骤。 定义 以“#”号开头的预处理指令如包含#include,宏定义制定#define等，在源程序中这些指令都放在函数之外，而且一般放在源文件里的最前面几行。预处理就是在对源程序的C代码进行编译之前所作的工作，预处理是C语言的一个重要的功能，它由预处理程序(预处理器)单独完成，当对一个源文件进行编译时，系统自动引用预处理程序，对源程序中的预处理进行一些文本性质的操作。简言之，C预处理器只不过是一个文本替换工具而已，它们会指示编译器在实际编译之前完成所需的预处理。 类型 1&gt;宏定义2&gt;条件编译3&gt;文件包含4&gt;预处理操作符#和##，预定义宏 任务 1&gt;将头文件中的内容(.h文件)插入到源文件中 2&gt;进行了宏替换的过程，定义和替换由#define指令定义的符号 3&gt;删除掉注释，注释是不会带入到编译阶段 4&gt;条件编译，根据“#if”后面的条件决定需要编译的代码 指令 指令 描述 #define 定义宏 #include 包含一个源代码文件 #undef 取消已定义的宏 #ifdef 如果宏已经定义，则返回真 #ifndef 如果宏没有定义，则返回真 #if 如果给定条件为真，则编译下面代码 #else if 的替代方案 #elif 如果前面的 #if 给定条件不为真，当前条件为真，则编译下面代码 #endif 结束一个 #if……#else 条件编译块 #error 当遇到标准错误时，输出错误消息 #pragma 使用标准化方法，向编译器发布特殊的命令到编译器 宏定义在C语言中允许用一个标识符来表示一个字符串：称为宏。在预处理时，对程序的宏进行替换。其中宏定义是由源程序中的#define来完成 ，而宏的替换，主要是由预处理程序完成。 1#define PI 3.14159 宏定义的规则 ’#‘表示一条预处理的指令，以’#‘开头的均是预处理指令 #define是宏定义的指令，标识符是所定义的宏名 宏名一般都是大写的字母表示，以便和变量名区别 宏定义其实并不是C语言的语句，所以后面是不用去加” ；“ 宏体可以是常数，表达式，格式化字符串等，为表达式的时候应该用括号括起来 宏替换不分配内存空间，也不做正确性的检查 宏的范围是从定义后到所在源文件结束，但是可以通过#undef来进行提前取消 无参数宏定义、有参数宏定义 无参数宏定义 123456789101112131415161718192021222324252627#include &lt;stdio.h&gt;#include &lt;string.h&gt;/*无参数宏定义*/#define PI 3.14159#define A 123#define B "Hello World!"//#undef B //取消了宏B的定义，那么宏B就不能再程序中使用/*宏的移除语法#undef 宏名功能：删除前面定义的宏*/int main()&#123; int sum=1,R=2; float s; char str[20]; sum+=A; s=PI*R*R; strcpy(str,B); printf("sum=%d\n",sum); printf("半径为R圆的面积:%.2f\n",s); printf("输出字符串str:%s",str); return 0;&#125; 输出结果: sum=124半径为R圆的面积:12.57输出字符串str:Hello World! 带参数宏定义 12345678910111213141516171819202122232425#include &lt;stdio.h&gt;/*带参数宏定义语法结构：#define [宏名](形参列表) (宏体)形式参数不分配内存单元，没有类型定义注：宏名和形式参数列表之间不能有空格出现。*//*MAX为宏名，紧跟其后(x,y)为形参列表，形参没有类型定义，((x) &gt; (y) ? (x) : (y))为宏体，是一个三目运算。*/#define MAX(x,y) ((x) &gt; (y) ? (x) : (y))#define square(x) ((x) * (x))#define square_1(x) (x * x)int main()&#123; int a; a=MAX(3,5); printf("a=%d\n",a); //宏的本质是直接代入替换参数的位置,文本替换 printf("square(5+4) is %d\n", square(5+4)); //(5+4)*(5+4)=81 printf("square_1(5+4) is %d\n", square_1(5+4)); //5+4*5+4=29 return 0;&#125; 输出结果: a=5square(5+4) is 81square_1(5+4) is 29 从带有参数的宏定义，可以看出在很多场合下，宏可以当成函数使用，但是又和真正的函数是有区别的。区别如下图所示： 对比项 带参数宏定义 函数 处理时间 编译时期 程序运行时期 参数类型 无参数类型 有具体的参数类型 处理过程 不分配内存，简单字符的置换 分配内存，先求得实参，再传递给形参 程序长度 会变长 不变 运行速度 不会占用运行时间 调用和返回会占用时间 支持递归 不支持 支持]]></content>
      <categories>
        <category>程序设计语言</category>
      </categories>
      <tags>
        <tag>C/C++</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo+GitHub+next搭建博客]]></title>
    <url>%2F2018%2F04%2F22%2Fhexo%2BGitHub%2Bnext%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[很久之前就想搭个属于自己的独立的博客，最近终于付之于行动了。这几天在网上了找了很多相关的资料，了解到了用hexo+github的方法搭建一个简便的博客。把这几天找到有用的网站整理一下，方便以后再深入了解。 1、基于windows系统的基本环境配置环境 需要安装的软件：Node.js和Git 注册Github账号，创建代码库，部署本地文件到GitHub 安装Hexo 初始化Hexo,首次体验Hexo 2、更换主题首次体验的Hexo主题是默认的，网站上有很多好看的主题。我选的主题是:next。在很多的主题中非常喜欢这个，简单大气，又功能俱全。接下来贴出next主题的相关配置链接。 首先是官方文档 官方文档比较全面但不详细，可以对照着看，具体操作还得看其他博主的博客基础配置 基础配置过后就可以来升级版了，让自己的博客具有更多的功能从而更好看升级配置 再补充一个偶然看到标签云的高级配置标签云这个也是有官方文档 在使用next主题前，我是使用Yelee主题的，我感觉next主题更好一点，不过萝卜白菜各有所爱。这里贴出Yelee主题的使用说明 3、注册域名在腾讯云买了域名，就像在淘宝买东西一样，输入自己想要的域名(例如：abc.cn、abc.com等等)，只要之前没人注册过，然后下单付钱。之后需要实名认证，实名认证的认证需要2到3个工作日。等实名认证通过了，你就可以解析域名了。富人可以自己购买服务器，将域名解析，穷人不想花一分钱的可以直接绑定到GitHub上。 操作步骤： 1、在你的域名管理有一个解析的选项，添加两条记录类型为CNAME的解析，一条主机记录为@，一条主机记录为www，记录值都为你的格式为username.github.io的地址。2、.在你的本地hexo博客文件的source文件夹下创建一个CNAME文件，记住不要有文件后缀名。编辑CNAME文件，里面写你在第一步申请的域名，例如：xxxx.cn，记住不要有www。3、在你本地博客文件里运行hexo g，再运行hexo d。4、在浏览器输入你申请的域名，你会发现该域名已经指向了你在github上的博客了。ps：设置域名解析需要几分钟的时间，完成以上步骤依然无法访问，请过几分钟再尝试访问。 4、补充在之后的使用中发现浏览器的留白太多，导致博客文章宽度不够，代码的查阅十分不方便。解决方案：next/source/css/_variables/custom.styl文件中添加 $main-desktop = 1200px $content-desktop = 900px]]></content>
      <categories>
        <category>计算机相关技术应用</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F04%2F16%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to MyBlog 我搭建博客的目的：记录平时学习的东西、解决的问题、浏览的有趣的网站等等，做一个总结和整理，方便以后还能找到。一切都是兴趣使然！ 强烈推荐阅读： 书写是为了更好的思考 为什么你应该(从现在开始就)写博客 123456//C#include &lt;stdio.h&gt;int main()&#123; printf("Hello World!")&#125; 1234567//C++#include &lt;iostream&gt;using namespace std;int main()&#123; cout&lt;&lt;"Hello World!"&lt;&lt;endl;&#125; 12345678910//Javapublic class Test &#123; public static void main(String[] args) &#123; // TODO Auto-generated method stub System.out.println("Hello World"); &#125;&#125; 12#Pythonprint("Hello World")]]></content>
      <categories>
        <category>程序设计语言</category>
      </categories>
      <tags>
        <tag>C/C++</tag>
        <tag>Java</tag>
        <tag>Python</tag>
      </tags>
  </entry>
</search>
